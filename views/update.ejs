<%- include("_header") -%>

<h2>Customer Update</h2>

<form>
    <p>
        <div>
            <label for="id">ID:</label>
            <input type="text" id="id" name="id" value="<%= data.id %>" readonly>
        </div>              
    </p>
    <p>
        <div>
            <label for="fName">First Name:</label>
            <input type="text" id="fName" name="fName" value="<%= data.fName %>">
        </div>  
    </p>
    <p>
        <div>
            <label for="lName">Last Name:</label>
            <input type="text" id="lName" name="lName" value="<%= data.lName %>">
        </div>  
    </p>
    <p>
        <div>
            <label for="state">State:</label>
            <input type="text" name="state" id="state" maxlength="2" value="<%= data.state %>">
        </div>  
    </p>
    <p>
        <div>
            <label for="salesYtd">Sales YTD:</label>
            <input type="text" id="salesYtd" name="salesYtd" value="<%= data.salesYtd %>">
        </div>              
    </p>
    <p>
        <div>
            <label for="previousSales">Previous Years Sales:</label>
            <input type="text" id="previousSales" name="previousSales" value="<%= data.previousSales %>">
        </div>              
    </p>
    <button id="updateButton">Update Customer</button>
</form>

<div id="error"></div>

<script>
    const updateButton = document.getElementById('updateButton');

    updateButton.addEventListener('click', (event) => {
        event.preventDefault();
        
        const customerId = document.getElementById('id').value;
        const fName = document.getElementById('fName').value.trim();
        const lName = document.getElementById('lName').value.trim();
        const state = document.getElementById('state').value.trim();
        const salesYtd = parseFloat(document.getElementById('salesYtd').value);
        const previousSales = parseFloat(document.getElementById('previousSales').value);
        
        if (fName === '') {
            showError('First name is required');
            return;
        }
        
        if (isNaN(salesYtd) || isNaN(previousSales)) {
            showError('Sales values must be valid numbers');
            return;
        }
        
        fetch(`/customers/${customerId}`, {
            method: 'PUT',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify({
                fName,
                lName,
                state,
                salesYtd,
                previousSales
            })
        })
            .then(response => {
                if (response.ok) {
                    const successMsg = document.createElement('p');
                    successMsg.textContent = 'Customer successfully updated!';
                    document.querySelector('form').replaceWith(successMsg);
                } else {
                    throw new Error('Network response was not ok');
                }
            })
            .catch(error => console.error('Error:', error));
    });
    
    function showError(msg) {
        const errorDiv = document.getElementById('error');
        errorDiv.textContent = msg;
    }
</script>

<%- include("_footer") -%>
